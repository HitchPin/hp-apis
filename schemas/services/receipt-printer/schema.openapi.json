{
  "openapi": "3.0.0",
  "info": {
    "title": "Receipt Rendering Service",
    "version": "1.0.0",
    "description": "A service that allows the backend to generate AOT receipts for later secure retrieval by the frontend."
  },
  "servers": [
    {
      "url": "https://receipt-printing.staging.hitchpin.zone",
      "description": "Staging environment"
    },
    {
      "url": "https://receipt-printing.prod.hitchpin.zone",
      "description": "Production environment"
    }
  ],
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "A URI reference that identifies the problem type.",
            "format": "uri",
            "maxLength": 1024
          },
          "status": {
            "type": "integer",
            "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
            "format": "int32",
            "minimum": 100,
            "maximum": 599
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization.",
            "maxLength": 1024
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "maxLength": 4096
          },
          "instance": {
            "type": "string",
            "description": "A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.",
            "maxLength": 1024
          },
          "code": {
            "type": "string",
            "description": "An API specific error code aiding the provider team understand the error based on their own potential taxonomy or registry.",
            "maxLength": 50
          },
          "errors": {
            "type": "array",
            "description": "An array of error details to accompany a problem details response.",
            "maxItems": 1000,
            "items": {
              "type": "object",
              "description": "An object to provide explicit details on a problem towards an API consumer.",
              "properties": {
                "detail": {
                  "type": "string",
                  "description": "A granular description on the specific error related to a body property, query parameter, path parameters, and/or header.",
                  "maxLength": 4096
                },
                "pointer": {
                  "type": "string",
                  "description": "A JSON Pointer to a specific request body property that is the source of error.",
                  "maxLength": 1024
                },
                "parameter": {
                  "type": "string",
                  "description": "The name of the query or path parameter that is the source of error.",
                  "maxLength": 1024
                },
                "header": {
                  "type": "string",
                  "description": "The name of the header that is the source of error.",
                  "maxLength": 1024
                },
                "code": {
                  "type": "string",
                  "description": "A string containing additional provider specific codes to identify the error context.",
                  "maxLength": 50
                }
              },
              "required": [
                "detail"
              ]
            }
          }
        },
        "required": [
          "detail"
        ]
      },
      "RenderReceiptRequest": {
        "type": "object",
        "properties": {
          "receipt": {
            "type": "object",
            "properties": {
              "invoice": {
                "type": "object",
                "properties": {
                  "shareHash": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "invoiceNumber": {
                    "type": "string"
                  },
                  "totalOwed": {
                    "type": "object",
                    "properties": {
                      "currencyCode": {
                        "type": "string",
                        "enum": [
                          "usd"
                        ]
                      },
                      "cents": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "currencyCode",
                      "cents"
                    ]
                  },
                  "forName": {
                    "type": "string",
                    "maxLength": 64
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "localIdentifier": {
                              "type": "string",
                              "maxLength": 256
                            },
                            "timestamp": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "showInLib": {
                              "type": "boolean"
                            },
                            "user": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "user"
                          ]
                        },
                        {
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "attachmentType": {
                                  "type": "string",
                                  "enum": [
                                    "document"
                                  ]
                                },
                                "document": {
                                  "type": "string",
                                  "format": "uri"
                                }
                              },
                              "required": [
                                "attachmentType",
                                "document"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "attachmentType": {
                                  "type": "string",
                                  "enum": [
                                    "image"
                                  ]
                                },
                                "image": {
                                  "type": "string",
                                  "format": "uri"
                                }
                              },
                              "required": [
                                "attachmentType",
                                "image"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "attachmentType": {
                                  "type": "string",
                                  "enum": [
                                    "text"
                                  ]
                                },
                                "text": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "attachmentType",
                                "text"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "sender": {
                    "type": "string"
                  }
                },
                "required": [
                  "shareHash",
                  "title",
                  "description",
                  "invoiceNumber",
                  "totalOwed",
                  "forName",
                  "attachments",
                  "sender"
                ]
              },
              "fees": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "object",
                      "properties": {
                        "currencyCode": {
                          "type": "string",
                          "enum": [
                            "usd"
                          ]
                        },
                        "cents": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "currencyCode",
                        "cents"
                      ]
                    },
                    "description": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "amount",
                    "description"
                  ]
                },
                "default": []
              },
              "paymentObjects": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "object",
                      "properties": {
                        "currencyCode": {
                          "type": "string",
                          "enum": [
                            "usd"
                          ]
                        },
                        "cents": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "currencyCode",
                        "cents"
                      ]
                    },
                    "last4": {
                      "type": "string",
                      "nullable": true,
                      "pattern": "^[0-9\\*]{2}[0-9]{2}"
                    },
                    "paymentMethodName": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "amount",
                    "paymentMethodName"
                  ]
                }
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "updated": {
                "type": "string",
                "format": "date-time"
              },
              "buyer": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "street1": {
                        "type": "string"
                      },
                      "street2": {
                        "type": "string",
                        "nullable": true
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "postalCode": {
                        "type": "string"
                      }
                    }
                  }
                },
                "required": [
                  "name",
                  "email",
                  "phone",
                  "address"
                ]
              },
              "seller": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "street1": {
                        "type": "string"
                      },
                      "street2": {
                        "type": "string",
                        "nullable": true
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "postalCode": {
                        "type": "string"
                      }
                    }
                  },
                  "storefrontName": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "email",
                  "phone",
                  "address",
                  "storefrontName"
                ]
              }
            },
            "required": [
              "invoice",
              "paymentObjects",
              "timestamp",
              "updated",
              "buyer",
              "seller"
            ]
          },
          "format": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "pdf"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "svg"
                ]
              }
            ],
            "default": "pdf"
          },
          "style": {
            "type": "string",
            "enum": [
              "modern"
            ],
            "default": "modern"
          },
          "branding": {
            "type": "object",
            "nullable": true,
            "properties": {
              "logoUrl": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "receipt"
        ],
        "description": "Request to render a receipt."
      },
      "RenderReceiptResponse": {
        "type": "string",
        "format": "binary"
      },
      "CreateRenderedReceiptUrlResponse": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "url"
        ],
        "description": "Response with a URL to a previously rendered receipt."
      },
      "CreateRenderedReceiptUrlRequest": {
        "type": "object",
        "properties": {
          "shareHash": {
            "type": "string"
          },
          "format": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "pdf"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "svg"
                ]
              }
            ]
          }
        },
        "required": [
          "shareHash",
          "format"
        ],
        "description": "Request to get the URL of a previously rendered receipt."
      }
    },
    "parameters": {}
  },
  "paths": {
    "/render": {
      "put": {
        "description": "Get user data by its id",
        "parameters": [
          {
            "in": "header",
            "name": "Accept",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "application/pdf",
                "image/svg+xml"
              ]
            }
          }
        ],
        "summary": "Register a pre-printed receipt so that the client can securely retrieve the PDF copy.",
        "tags": [
          "rendering"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenderReceiptRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response that can be used to retrieve the receipt PDF.",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/svg+xml": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Could not render receipt.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/render-link": {
      "post": {
        "description": "Create pre-rendered receipt the invoice id.",
        "summary": "Register a pre-printed receipt so that the client can securely retrieve the PDF copy.",
        "tags": [
          "rendering"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRenderedReceiptUrlRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response that can be used to retrieve the receipt PDF.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRenderedReceiptUrlResponse"
                }
              }
            }
          },
          "404": {
            "description": "Could not find rendered receipt.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}