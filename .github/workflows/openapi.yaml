# This is a basic workflow to help you get started with Actions
name: Start OpenAI Argo build

# Controls when the action will run. Invokes the workflow on push events but only for the main branch
on: [pull_request]

env:
  AWS_REGION : "us-east-1"

# Permission can be added at job level or workflow level    
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  ConfigureArgo:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          role-to-assume: arn:aws:iam::390402568971:role/ArgoStarter
          role-session-name: ActionRunner
          aws-region: ${{ env.AWS_REGION }}
      # Hello from AWS: WhoAmI
      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity
      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --name serious-rock-mountain
      - uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: nicknovitski/nix-develop@v1
      - run: aws eks update-kubeconfig --name serious-rock-mountain
      - run: kubectl get pods -n argo
      - run: kubectl -n argo port-forward service/argo-server 2746:2746 &
      - name: Generate GitHub App Token
        uses: tibdex/github-app-token@v2.1.0
        id: generate-gh-app-token
        with:
          app_id: ${{ secrets.CODESENTINEL_ID }}
          private_key: ${{ secrets.CODESENTINEL_PRIVATE_KEY }}
      - name: Open a Check
        id: open-argo-check
        env:
          GITHUB_TOKEN: ${{ steps.generate-gh-app-token.outputs.token }}
        run: |
          CHECKID=$(gh api -X POST -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -f 'name=Awaiting Terraform Approval Comment' \
            -f 'head_sha=${{ github.event.pull_request.head.sha }}' \
            -f 'status=in_progress' \
            -f 'output[title]=Terraform plan output must be approved in order to merge this PR.' \
            -f 'output[summary]=n/a' \
            -f 'output[text]=n/a' \
            --jq '.id' \
            /repos/${{ github.repository }}/check-runs)
          echo "checkId=$CHECKID" >> $GITHUB_OUTPUT
      - run : |
          ARGO_TOKEN="Bearer $(kubectl get secret github.com.service-account-token -o=jsonpath='{.data.token}' -n argo | base64 -d)"
          curl --insecure https://localhost:2746/api/v1/events/argo/github-push \
            -H "Authorization: $ARGO_TOKEN" \
            -d '{"check": "'$"}'
        env:
          GITHUB_TOKEN: ${{ steps.open-argo-check.outputs.checkId }}